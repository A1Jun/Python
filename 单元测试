单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试工作。

如果单元测试通过，说明测试的这个函数能够正常工作。如果单元测试不同，要么函数有bug，要么测试条件输入不正确。

通过后的意义： 如果对一个函数代码做了修改，只需要再跑一遍单元测试，如果通过，说明修改不会对函数原来的行为造成影响。

如果测试不通过，说明修改与原有行为不一致，要么修改代码，要么修改测试。
---------------------------------------------------------------------------------------------------------
1.编写单元测试时，需要编写一个测试类，从unittest.TestCase继承。

2.以test开头的方法就是测试方法，不以test开头的方法不被认为是测试方法，测试的时候不会被执行。

3.对每一类测试都需要编写一个test_xxx方法，由于unittest.TestCase提供了很多内置的条件判断，
    我们只需要调用这些方法就可以断言输出是否是我们所期望的。最常用的断言是assertEqual()
    self.assertEqual(abs(-1), 1) # 断言函数返回的结果与1相等
    
4.另一种重要的断言就是期待抛出指定类型的Error,比如通过d['empty']访问不存在的key时，断言会抛出KeyError:
    with self.assertRaises(KeyError):
        value = d['empty']
        
  而通过d.empty访问不存在的key时，我们期待跑出AttributeError:
    with self.assertRaises(AttributeError):
        value = d.empty

如果测试需要启动一个数据库，这时，可以在setUp()方法中连接数据库，在tearDown()方法中关闭数据库

动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的。
type()函数可以查看一个类型或变量的类型，type()函数既可以返回一个对象的类型，又可以创建出新的类型。

>>> def fn(self, name='world'): # 先定义函数
        print('Hello, %s.' % name)
>>> Hello = type('Hello', (object, ）， dict(hello=fn)) # 创建Hello class        
三个参数：
1. class的名称
2. 继承的父类集合，只有一个父类需要写
3. class的方法名称与函数绑定，这里我们把函数fn绑定到方法名hello上

---------------------------------------------------------还有很多要补充的 以后再写
